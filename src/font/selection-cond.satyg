@import: axes
@import: style

type font-selection-length-field =
  | FontSize

type font-selection-float-field =
  | Weight

type font-selection-int-field =
  | Width
  | Slant

type font-selection-cond =
  | LengthSingle of font-selection-length-field * length
  | FloatSingle of font-selection-float-field * float
  | IntSingle of font-selection-int-field * int
  | Style of font-style
  | And of font-selection-cond list
%  | Charset
%  | Lang

module FontSelectionCond : sig

  val of-simple-config :
    (| font-size : length option ;
      width : int ;
      weight : float ;
      slant : int;
      style : font-style;
%      charset : int;
%      lang : string;
    |) -> font-selection-cond

end = struct

  let of-simple-config fa =
    let cs =
      let f acc o =
        match o with
        | None -> acc
        | Some e -> e :: acc
      in
      [
        Option.map (fun size ->
          LengthSingle (FontSize, size))
          fa#font-size;
        Some (FloatSingle (Weight, fa#weight));
        Some (IntSingle (Width, fa#width));
        Some (IntSingle (Slant, fa#slant));
        Some (Style fa#style);
      ]
      |> List.fold-left f []
    in
    And cs

end