@require: base/set

@import: font/selection-cond
@import: font/axes
@import: font/script
@import: font/set

module Fonts : sig

  val default-font-axes : font-axes
  val default-font-set : font-set

end = struct

  let font-default-Jpan script font =
    (| script = script ;
      font = (|
        font-name = font ;
        ratio = 0.88 ;
        rising = 0.0 ;
      |) ;
    |)

  let font-default-Latn script font =
    (| script = script ;
      font = (|
        font-name = font ;
        ratio = 1.0 ;
        rising = 0.0 ;
      |) ;
    |)

  let default-font-combination-r : font-combination =
  [ font-default-Jpan FontScript.hani `ipaexm` ;
    font-default-Jpan FontScript.kana `ipaexm` ;
    font-default-Latn FontScript.latn `fonts-junicode:Junicode` ;
    font-default-Latn FontScript.other `fonts-junicode:Junicode` ;
  ]
  let default-font-axes : font-axes =
    (| width = 100 ;
      weight = 80. ;
      slant = 0 ;
      style = FontStyle.parse `Regular` ;
    |)
  let default-font-cond-r : font-selection-cond =
    FontSelectionCond.of-simple-config
      (| font-size = None ;
        width = 100 ;
        weight = 80. ;
        slant = 0 ;
        style = FontStyle.parse `Regular` ;
      |)

  let default-font-combination-i : font-combination =
  [ font-default-Jpan FontScript.hani `ipaexg` ;
    font-default-Jpan FontScript.kana `ipaexg` ;
    font-default-Latn FontScript.latn `fonts-junicode:Junicode-Italic` ;
    font-default-Latn FontScript.other `fonts-junicode:Junicode-Italic` ;
  ]
  let default-font-cond-i : font-selection-cond =
    FontSelectionCond.of-simple-config
      (| font-size = None ;
        width = 100 ;
        weight = 80. ;
        slant = 100 ;
        style = FontStyle.parse `Italic` ;
      |)

  let default-font-combination-b : font-combination =
  [ font-default-Jpan FontScript.hani `ipaexg` ;
    font-default-Jpan FontScript.kana `ipaexg` ;
    font-default-Latn FontScript.latn `fonts-junicode:Junicode-Bold` ;
    font-default-Latn FontScript.other `fonts-junicode:Junicode-Bold` ;
  ]
  let default-font-cond-b : font-selection-cond =
    FontSelectionCond.of-simple-config
      (| font-size = None ;
        width = 100 ;
        weight = 180. ;
        slant = 0 ;
        style = FontStyle.parse `Bold` ;
      |)

  let default-font-combination-bi : font-combination =
  [ font-default-Jpan FontScript.hani `ipaexg` ;
    font-default-Jpan FontScript.kana `ipaexg` ;
    font-default-Latn FontScript.latn `fonts-junicode:Junicode-BoldItalic` ;
    font-default-Latn FontScript.other `fonts-junicode:Junicode-BoldItalic` ;
  ]
  let default-font-cond-bi : font-selection-cond =
    FontSelectionCond.of-simple-config
      (| font-size = None ;
        width = 100 ;
        weight = 180. ;
        slant = 100 ;
        style = FontStyle.parse `Bold Italic` ;
      |)

  let default-font-set : font-set =
    (| default-font = default-font-combination-r ;
      conditional-fonts =
        [ (default-font-cond-r, default-font-combination-r) ;
          (default-font-cond-i, default-font-combination-i) ;
          (default-font-cond-b, default-font-combination-b) ;
          (default-font-cond-bi, default-font-combination-bi) ;
        ];
      covered-area = Set.of-list [
          FontScript.hani ;
          FontScript.kana ;
          FontScript.latn ;
          FontScript.other ;
        ];
    |)

end
