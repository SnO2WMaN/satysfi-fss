@import: font/combination
@import: font/selection
@import: font/set
@import: mutable


module Fss : sig

  val \text-font-combination : [font-combination; inline-text] inline-cmd
  val \text-font : [font-set; font-axes; inline-text] inline-cmd

  direct \font-set : [font-set; inline-text] inline-cmd
  direct \font-style : [(font-axes -> font-axes) list; inline-text] inline-cmd

  direct +font-set : [font-set; block-text] block-cmd
  direct +font-style : [(font-axes -> font-axes) list; block-text] block-cmd

  val set-debug-level : int -> unit

end = struct

  let set-debug-level level =
    let () = FontSelection.set-debug-level level in
    let () = FssMutableInternal.set-debug-level level in
    ()

  let-rec set-font-combination font-comb ctx =
    match font-comb with
    | [] -> ctx
    | (font-pair :: font-comb) ->
      let font-triple =
        (font-pair#font#font-name, font-pair#font#ratio, font-pair#font#rising)
      in
      set-font font-pair#script font-triple (set-font-combination font-comb ctx)

  let-inline ctx \text-font-combination font-comb it =
    let ctx =
      ctx |> set-font-combination font-comb
    in
    read-inline ctx it

  let-inline ctx \text-font font-set font-axes it =
    let font-comb = FontSelection.find-optimal-font font-set font-axes in
    let ctx =
      ctx |> set-font-combination font-comb
    in
    read-inline ctx it

  let with-font font-set font-axes ctx =
    let font-comb = FontSelection.find-optimal-font font-set font-axes in
    set-font-combination font-comb ctx

  let-inline ctx \font-set fs it =
    FssMutableInternal.with-font-set ?:`\font-set` ctx fs (fun fs fa ctx ->
      (let ctx = with-font fs fa ctx in
      read-inline ctx it)
    )

  let-inline ctx \font-style ss it =
    FssMutableInternal.with-font-style ?:`\font-style` ctx ss (fun fs fa ctx ->
      (let ctx = with-font fs fa ctx in
      read-inline ctx it)
    )

  let-block ctx +font-set fs bt =
    FssMutableInternal.with-font-set ?:`+font-set` ctx fs (fun fs fa ctx ->
      (let ctx = with-font fs fa ctx in
      read-block ctx bt)
    )

  let-block ctx +font-style ss bt =
    FssMutableInternal.with-font-style ?:`+font-style` ctx ss (fun fs fa ctx ->
      (let ctx = with-font fs fa ctx in
      read-block ctx bt)
    )

end
