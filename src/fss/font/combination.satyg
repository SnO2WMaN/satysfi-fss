@import: font
@import: script

type font-combination-pair =
  (| script : FontScript.t ;
     font : font;
  |)

type font-combination =
  font-combination-pair list

module FontCombination : sig

  val to-string : font-combination -> string
  val font-combination-pair-to-string : font-combination-pair -> string

end = struct

  let font-combination-pair-to-string f =
    FontScript.to-string f#script ^ #` `# ^ f#font#font-name

  let to-string font-comb =
    let-rec sub acc font-comb =
      match font-comb with
      | [] -> `[` ^ acc ^ `]`
      | (f :: font-comb) ->
        sub (font-combination-pair-to-string f ^ `;` ^ acc) font-comb
    in
    sub ` ` font-comb

end